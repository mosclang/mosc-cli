kabo "net" nani HttpServer, HttpInitOption, WebSocket
kabo "timer" nani WaatiMassa
kabo "json" nani JSON

# nin server = HttpServer.kura()
tii Baa.also(fn) {
    fn.weele(ale)
    segin niin ale
}
tii Baa.let(fn) {
    segin niin fn.weele(ale)
}
nin list = [{id: 1, name: "Molo"}, {id: 2, name: "Aly"}]
nin server = HttpServer
                .kura()
                .get("/list") { (req, res) =>
                    # WaatiMassa.sunogo(6000)
                    A.yira(req.headers)
                    A.yira(req.method)
                    A.yira(req.url)
                    A.yira(req.fullUrl)
                    A.yira(req.remoteAddress)
                    res.writeStatus("400")
                        .writeHeader("Content-Type", "application/json")
                        .end()
                }
                .post("/insert") {(req,res) =>
                    req.onAbort {
                        A.yira("Aborted")
                    }
                    req.onData { (data, end) =>
                        A.yira("Data $data = $end")
                        #nin body = JSON.decode(data)
                        #list.aFaraAkan(body)
                        res.end(list)
                    }
                }
                .put("/update/:id") {(req, res) =>
                    nin id = req.parameter(0)
                    nin body = JSON.decode(req.body)

                    nin item = list.yoroMin {(e) => "${e["id"]}" == "$id" }.let {(it) =>
                        A.yira(it.walanNa)
                        segin niin nii it.laKolon gansan note it.walanNa[0]
                    }
                    seginka (body kono entry) {
                        item[entry.key] = entry.value
                    }
                    res.cork {r => r.end(item)}
                }.delete("/remove/:id") { req, res =>
                    nin id = req.parameter(0)
                    nin item = list.yoroMin {(e) => "${e["id"]}" == "$id" }.let {(it) =>
                        A.yira(it.walanNa)
                        segin niin nii it.laKolon gansan note it.walanNa[0]
                    }
                    list.aBoye(item)
                    req.writeHeader("Content-Type", "application/json")
                    req.end(list)
                }
                .ws("/chat", {
                    maxPayloadLength: 16 * 1024 * 1024,
                    # compression: Websocket.
                    idleTimeout: 30,
                    open: Tii.kura {ws =>
                        A.yira("Connection from a websocket")
                    },
                    close: Tii.kura { ws,message =>
                        A.yira("Disconnection from a websocket: $message")
                    },
                    ping: Tii.kura {ws, message =>
                        A.yira("Websocket ping")
                    },
                    pong: Tii.kura {ws, message =>
                        A.yira("Websocket pong")
                    },
                    drain: Tii.kura {ws =>
                        A.yira("Websocket backpressure : ${ws.bufferedAmount}")
                    },
                    message: Tii.kura { ws, message, code =>
                        A.yira("New Message $message")
                        WaatiMassa.sunogo(4000)
                        ws.send(message, code)
                    },
                    subscription: Tii.kura {ws, topic, count, oldCount =>
                        A.yira("Subscription on $topic to $count from $oldCount")
                        A.yira("${server.subscriberCount(topic)}")
                    }
                })
                .any("/close") {req, res =>
                    server.close()
                }
                .listen(3030) { A.yira("Listening on 3030") }
   server.run()

